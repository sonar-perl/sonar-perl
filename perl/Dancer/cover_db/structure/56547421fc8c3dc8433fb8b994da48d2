{"start":{"101":{"BEGIN":[{"time":null,"branch":null,"subroutine":11,"pod":null,"statement":33,"condition":null}]},"6":{"BEGIN":[{"pod":null,"subroutine":2,"branch":null,"time":null,"condition":null,"statement":6}]},"259":{"execute":[{"pod":8,"subroutine":23,"time":null,"branch":33,"statement":136,"condition":6}]},"12":{"BEGIN":[{"condition":null,"statement":21,"pod":null,"subroutine":7,"time":null,"branch":null}]},"264":{"__ANON__":[{"condition":7,"statement":147,"branch":35,"time":null,"subroutine":24,"pod":9}]},"4":{"BEGIN":[{"subroutine":null,"pod":null,"branch":null,"time":null,"condition":null,"statement":null}]},"69":{"save_match_data":[{"statement":51,"condition":null,"branch":5,"time":null,"pod":2,"subroutine":14}]},"41":{"init":[{"branch":null,"time":null,"pod":null,"subroutine":12,"condition":null,"statement":36}]},"62":{"set_previous":[{"pod":1,"subroutine":13,"time":null,"branch":5,"statement":47,"condition":null}]},"9":{"BEGIN":[{"pod":null,"subroutine":4,"time":null,"branch":null,"statement":12,"condition":null}]},"332":{"_build_regexp_from_string":[{"subroutine":29,"pod":11,"branch":39,"time":null,"condition":7,"statement":171}]},"157":{"has_options":[{"subroutine":16,"pod":4,"branch":16,"time":null,"condition":1,"statement":85}]},"185":{"run":[{"condition":3,"statement":103,"time":null,"branch":21,"subroutine":19,"pod":7}]},"317":{"_build_regexp":[{"time":null,"branch":38,"pod":11,"subroutine":28,"statement":164,"condition":7}]},"278":{"_init_prefix":[{"time":null,"branch":35,"pod":9,"subroutine":25,"condition":7,"statement":147}]},"174":{"validate_options":[{"branch":19,"time":null,"pod":6,"subroutine":18,"statement":97,"condition":2}]},"14":{"BEGIN":[{"condition":null,"statement":27,"pod":null,"subroutine":9,"time":null,"branch":null}]},"11":{"BEGIN":[{"condition":null,"statement":18,"pod":null,"subroutine":6,"time":null,"branch":null}]},"188":{"__ANON__":[{"condition":6,"statement":136,"pod":8,"subroutine":20,"time":null,"branch":33}]},"162":{"check_options":[{"condition":1,"statement":88,"pod":5,"subroutine":17,"branch":17,"time":null}]},"199":{"__ANON__":[{"time":null,"branch":33,"subroutine":22,"pod":8,"condition":6,"statement":136}]},"15":{"BEGIN":[{"statement":30,"condition":null,"branch":null,"time":null,"pod":null,"subroutine":10}]},"78":{"match":[{"pod":3,"subroutine":15,"time":null,"branch":5,"statement":55,"condition":null}]},"-1":{"__COVER__":[{"pod":11,"subroutine":30,"branch":44,"time":null,"statement":187,"condition":7}]},"190":{"__ANON__":[{"condition":6,"statement":136,"branch":33,"time":null,"subroutine":21,"pod":8}]},"10":{"BEGIN":[{"statement":15,"condition":null,"time":null,"branch":null,"subroutine":5,"pod":null}]},"312":{"is_regexp":[{"time":null,"branch":38,"subroutine":27,"pod":10,"statement":162,"condition":7}]},"5":{"BEGIN":[{"condition":null,"statement":3,"branch":null,"time":null,"pod":null,"subroutine":1}]},"7":{"BEGIN":[{"statement":9,"condition":null,"time":null,"branch":null,"pod":null,"subroutine":3}]},"307":{"equals":[{"subroutine":26,"pod":9,"branch":38,"time":null,"statement":160,"condition":7}]},"13":{"BEGIN":[{"condition":null,"statement":24,"time":null,"branch":null,"subroutine":8,"pod":null}]}},"digest":"56547421fc8c3dc8433fb8b994da48d2","condition":[[139,{"op":"||","left":"$values[$i]","type":"or_2","right":"''"}],[168,{"right":"grep {/^$opt$/;} keys %_options_aliases","type":"or_3","left":"grep {/^$opt$/;} @{$_supported_options[0];}","op":"or"}],[179,{"left":"$request->$option","op":"and","right":"$request->$option =~ /$value/","type":"and_3"}],[205,{"type":"and_3","right":"$response->is_forwarded","op":"and","left":"$response"}],[219,{"right":"$response->has_passed","type":"and_3","left":"$response","op":"and"}],[235,{"op":"&&","left":"defined $response","type":"and_3","right":"defined $response->content_type"}],[264,{"type":"or_3","right":"$_[0]","op":"||=","left":"$warning"}]],"statement":[4,4,4,5,5,5,6,6,6,7,7,7,9,9,9,10,10,10,11,11,11,12,12,12,13,13,13,14,14,14,15,15,15,101,101,101,41,42,44,48,51,52,53,54,55,56,58,62,63,64,65,69,70,71,73,78,80,81,85,88,90,94,94,100,101,104,107,117,122,123,125,125,126,128,130,132,133,134,138,139,141,143,149,150,153,157,158,158,162,163,165,165,168,167,167,168,170,174,176,178,179,176,181,185,202,188,190,192,195,196,197,199,200,201,203,205,207,208,215,215,219,220,223,224,227,228,233,235,240,242,243,243,248,248,250,251,259,261,262,263,264,264,265,267,268,270,273,278,279,281,282,283,284,293,294,295,296,297,300,303,307,308,312,313,317,319,320,321,322,325,328,332,333,334,337,338,339,340,341,348,351,354,357,359,360,361,363],"file":"lib/Dancer/Route.pm","subroutine":[[4,"BEGIN"],[5,"BEGIN"],[6,"BEGIN"],[7,"BEGIN"],[9,"BEGIN"],[10,"BEGIN"],[11,"BEGIN"],[12,"BEGIN"],[13,"BEGIN"],[14,"BEGIN"],[15,"BEGIN"],[101,"BEGIN"],[41,"init"],[62,"set_previous"],[69,"save_match_data"],[78,"match"],[157,"has_options"],[162,"check_options"],[174,"validate_options"],[185,"run"],[188,"__ANON__"],[190,"__ANON__"],[199,"__ANON__"],[259,"execute"],[264,"__ANON__"],[278,"_init_prefix"],[307,"equals"],[312,"is_regexp"],[317,"_build_regexp"],[332,"_build_regexp_from_string"]],"pod":[[41,"init"],[62,"set_previous"],[69,"save_match_data"],[78,"match"],[157,"has_options"],[162,"check_options"],[174,"validate_options"],[185,"run"],[259,"execute"],[307,"equals"],[312,"is_regexp"]],"branch":[[44,{"text":"unless defined $self->pattern"}],[48,{"text":"if ref $self->pattern eq \"Regexp\""}],[53,{"text":"unless $self->prefix"}],[54,{"text":"if $self->prefix"}],[56,{"text":"if $self->prev"}],[90,{"text":"unless @values"}],[94,{"text":"defined $_ ? :"}],[104,{"text":"if keys %captures"}],[100,{"text":"if (my(%captures) = do {\n\tno warnings;\n%+\n})"}],[125,{"text":"unless $self->{'_params'}"}],[126,{"text":"if @tokens"}],[132,{"text":"if ($token_or_splat[$i] eq \"token\")"}],[138,{"text":"if ($token_or_splat[$i] eq \"megasplat\")"}],[143,{"text":"@splat ? :"}],[123,{"text":"if (@token_or_splat)"}],[149,{"text":"if ($self->{'_should_capture'})"}],[158,{"text":"keys %{$self->options;} ? :"}],[163,{"text":"unless defined $self->options"}],[168,{"text":"unless grep {/^$opt$/;} @{$_supported_options[0];} or grep {/^$opt$/;} keys %_options_aliases"}],[178,{"text":"if exists $_options_aliases{$option}"}],[179,{"text":"unless $request->$option and $request->$option =~ /$value/"}],[192,{"text":"unless $continuation->isa(\"Dancer::Continuation::Route\")"}],[196,{"text":"unless defined $content"}],[215,{"text":"ref $marshalled->[2] eq 'ARRAY' ? :"}],[205,{"text":"if ($response and $response->is_forwarded)"}],[224,{"text":"if $self->match($request)"}],[219,{"text":"if ($response and $response->has_passed)"}],[233,{"text":"defined $content ? :"}],[235,{"text":"defined $response && defined $response->content_type ? :"}],[240,{"text":"defined $response ? :"}],[243,{"text":"if defined $response"}],[248,{"text":"unless grep {/Content-Type/;} @$headers"}],[250,{"text":"if ref $content eq \"Dancer::Response\""}],[267,{"text":"if ($warning)"}],[261,{"text":"if (Dancer::Config::setting('warnings')) { }"}],[283,{"text":"unless ($regexp =~ /^$prefix/)"}],[281,{"text":"if ($self->is_regexp) { }"}],[281,{"text":"elsif ($self->pattern eq '/') { }"}],[319,{"text":"if ($self->is_regexp) { }"}],[339,{"text":"if (@params)"}],[337,{"text":"if ($pattern =~ /:/)"}],[348,{"text":"if $pattern =~ s/\\*\\*/(?#megasplat)([^\\n]+)/g"}],[351,{"text":"if $pattern =~ s[\\*][(?#splat)([^/]+)]g"}],[354,{"text":"if $pattern =~ /\\./"}]]}